generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//The User model has a one-many relationship to clients and a many-many relationship with appointments.
//It is also pulling the profile object from type Profile.
model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  permissions    Permission    @default(ADMIN)
  type           Type          @default(TRAINER)
  // profile        Profile
  email          String        @unique
  password       String
  firstName      String
  lastName       String
  phone          Int
  about          String?
  age            Int
  appointmentIDs String[]      @db.ObjectId
  appointments   Appointment[] @relation(fields: [appointmentIDs], references: [id])
  clients        Client[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

// type Profile {
//   firstName String
//   lastName  String
//   phone     Int
//   about     String?
//   age       Int
// }

//Enum gives us the ability to set a type for each user, as well as a default.
enum Permission {
  USER
  ADMIN
}

enum Type {
  TRAINER
  CLIENT
}

model Client {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  clientID  String  @db.ObjectId
  user      User?   @relation(fields: [clientID], references: [id], onDelete: Cascade)
  firstName String
  lastName  String
  age       Int
  phone     Int
  email     String
  about     String?
}

model Appointment {
  id                         String   @id @default(auto()) @map("_id") @db.ObjectId
  type                       String
  userIDs                    String[] @db.ObjectId
  users                      User[]   @relation(fields: [userIDs], references: [id])
  appointmentPlanTitle       String
  appointmentPlanDescription String
  appointmentDuration        Int
  date                       DateTime @default(now())
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
}
